// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RequestProtoc.proto

package com.kindroid.kincent.protoc;

public final class RequestProtoc {
  private RequestProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class RequestContext extends
      com.google.protobuf.GeneratedMessage {
    // Use RequestContext.newBuilder() to construct.
    private RequestContext() {
      initFields();
    }
    private RequestContext(boolean noInit) {}
    
    private static final RequestContext defaultInstance;
    public static RequestContext getDefaultInstance() {
      return defaultInstance;
    }
    
    public RequestContext getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.kincent.protoc.RequestProtoc.internal_static_com_kindroid_kincent_protoc_RequestContext_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.kincent.protoc.RequestProtoc.internal_static_com_kindroid_kincent_protoc_RequestContext_fieldAccessorTable;
    }
    
    // optional string authToken = 1;
    public static final int AUTHTOKEN_FIELD_NUMBER = 1;
    private boolean hasAuthToken;
    private java.lang.String authToken_ = "";
    public boolean hasAuthToken() { return hasAuthToken; }
    public java.lang.String getAuthToken() { return authToken_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAuthToken()) {
        output.writeString(1, getAuthToken());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAuthToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getAuthToken());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.kincent.protoc.RequestProtoc.RequestContext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.RequestContext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.RequestContext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.RequestContext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.RequestContext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.RequestContext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.RequestContext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.RequestContext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.RequestContext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.RequestContext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.kincent.protoc.RequestProtoc.RequestContext prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.kincent.protoc.RequestProtoc.RequestContext result;
      
      // Construct using com.kindroid.kincent.protoc.RequestProtoc.RequestContext.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.kincent.protoc.RequestProtoc.RequestContext();
        return builder;
      }
      
      protected com.kindroid.kincent.protoc.RequestProtoc.RequestContext internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.kincent.protoc.RequestProtoc.RequestContext();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.kincent.protoc.RequestProtoc.RequestContext.getDescriptor();
      }
      
      public com.kindroid.kincent.protoc.RequestProtoc.RequestContext getDefaultInstanceForType() {
        return com.kindroid.kincent.protoc.RequestProtoc.RequestContext.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.kincent.protoc.RequestProtoc.RequestContext build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.kincent.protoc.RequestProtoc.RequestContext buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.kincent.protoc.RequestProtoc.RequestContext buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.kincent.protoc.RequestProtoc.RequestContext returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.kincent.protoc.RequestProtoc.RequestContext) {
          return mergeFrom((com.kindroid.kincent.protoc.RequestProtoc.RequestContext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.kincent.protoc.RequestProtoc.RequestContext other) {
        if (other == com.kindroid.kincent.protoc.RequestProtoc.RequestContext.getDefaultInstance()) return this;
        if (other.hasAuthToken()) {
          setAuthToken(other.getAuthToken());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setAuthToken(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string authToken = 1;
      public boolean hasAuthToken() {
        return result.hasAuthToken();
      }
      public java.lang.String getAuthToken() {
        return result.getAuthToken();
      }
      public Builder setAuthToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAuthToken = true;
        result.authToken_ = value;
        return this;
      }
      public Builder clearAuthToken() {
        result.hasAuthToken = false;
        result.authToken_ = getDefaultInstance().getAuthToken();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.kincent.protoc.RequestContext)
    }
    
    static {
      defaultInstance = new RequestContext(true);
      com.kindroid.kincent.protoc.RequestProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.kincent.protoc.RequestContext)
  }
  
  public static final class Request extends
      com.google.protobuf.GeneratedMessage {
    // Use Request.newBuilder() to construct.
    private Request() {
      initFields();
    }
    private Request(boolean noInit) {}
    
    private static final Request defaultInstance;
    public static Request getDefaultInstance() {
      return defaultInstance;
    }
    
    public Request getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.kincent.protoc.RequestProtoc.internal_static_com_kindroid_kincent_protoc_Request_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.kincent.protoc.RequestProtoc.internal_static_com_kindroid_kincent_protoc_Request_fieldAccessorTable;
    }
    
    // optional .com.kindroid.kincent.protoc.RequestContext context = 1;
    public static final int CONTEXT_FIELD_NUMBER = 1;
    private boolean hasContext;
    private com.kindroid.kincent.protoc.RequestProtoc.RequestContext context_;
    public boolean hasContext() { return hasContext; }
    public com.kindroid.kincent.protoc.RequestProtoc.RequestContext getContext() { return context_; }
    
    // optional .com.kindroid.kincent.protoc.FeedbackRequest feedbackRequest = 2;
    public static final int FEEDBACKREQUEST_FIELD_NUMBER = 2;
    private boolean hasFeedbackRequest;
    private com.kindroid.kincent.protoc.FeedbackProtoc.FeedbackRequest feedbackRequest_;
    public boolean hasFeedbackRequest() { return hasFeedbackRequest; }
    public com.kindroid.kincent.protoc.FeedbackProtoc.FeedbackRequest getFeedbackRequest() { return feedbackRequest_; }
    
    private void initFields() {
      context_ = com.kindroid.kincent.protoc.RequestProtoc.RequestContext.getDefaultInstance();
      feedbackRequest_ = com.kindroid.kincent.protoc.FeedbackProtoc.FeedbackRequest.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasFeedbackRequest()) {
        if (!getFeedbackRequest().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasContext()) {
        output.writeMessage(1, getContext());
      }
      if (hasFeedbackRequest()) {
        output.writeMessage(2, getFeedbackRequest());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasContext()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getContext());
      }
      if (hasFeedbackRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFeedbackRequest());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.kincent.protoc.RequestProtoc.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.kincent.protoc.RequestProtoc.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.kincent.protoc.RequestProtoc.Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.kincent.protoc.RequestProtoc.Request result;
      
      // Construct using com.kindroid.kincent.protoc.RequestProtoc.Request.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.kincent.protoc.RequestProtoc.Request();
        return builder;
      }
      
      protected com.kindroid.kincent.protoc.RequestProtoc.Request internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.kincent.protoc.RequestProtoc.Request();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.kincent.protoc.RequestProtoc.Request.getDescriptor();
      }
      
      public com.kindroid.kincent.protoc.RequestProtoc.Request getDefaultInstanceForType() {
        return com.kindroid.kincent.protoc.RequestProtoc.Request.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.kincent.protoc.RequestProtoc.Request build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.kincent.protoc.RequestProtoc.Request buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.kincent.protoc.RequestProtoc.Request buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.kincent.protoc.RequestProtoc.Request returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.kincent.protoc.RequestProtoc.Request) {
          return mergeFrom((com.kindroid.kincent.protoc.RequestProtoc.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.kincent.protoc.RequestProtoc.Request other) {
        if (other == com.kindroid.kincent.protoc.RequestProtoc.Request.getDefaultInstance()) return this;
        if (other.hasContext()) {
          mergeContext(other.getContext());
        }
        if (other.hasFeedbackRequest()) {
          mergeFeedbackRequest(other.getFeedbackRequest());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.kincent.protoc.RequestProtoc.RequestContext.Builder subBuilder = com.kindroid.kincent.protoc.RequestProtoc.RequestContext.newBuilder();
              if (hasContext()) {
                subBuilder.mergeFrom(getContext());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setContext(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.kindroid.kincent.protoc.FeedbackProtoc.FeedbackRequest.Builder subBuilder = com.kindroid.kincent.protoc.FeedbackProtoc.FeedbackRequest.newBuilder();
              if (hasFeedbackRequest()) {
                subBuilder.mergeFrom(getFeedbackRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFeedbackRequest(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.kindroid.kincent.protoc.RequestContext context = 1;
      public boolean hasContext() {
        return result.hasContext();
      }
      public com.kindroid.kincent.protoc.RequestProtoc.RequestContext getContext() {
        return result.getContext();
      }
      public Builder setContext(com.kindroid.kincent.protoc.RequestProtoc.RequestContext value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasContext = true;
        result.context_ = value;
        return this;
      }
      public Builder setContext(com.kindroid.kincent.protoc.RequestProtoc.RequestContext.Builder builderForValue) {
        result.hasContext = true;
        result.context_ = builderForValue.build();
        return this;
      }
      public Builder mergeContext(com.kindroid.kincent.protoc.RequestProtoc.RequestContext value) {
        if (result.hasContext() &&
            result.context_ != com.kindroid.kincent.protoc.RequestProtoc.RequestContext.getDefaultInstance()) {
          result.context_ =
            com.kindroid.kincent.protoc.RequestProtoc.RequestContext.newBuilder(result.context_).mergeFrom(value).buildPartial();
        } else {
          result.context_ = value;
        }
        result.hasContext = true;
        return this;
      }
      public Builder clearContext() {
        result.hasContext = false;
        result.context_ = com.kindroid.kincent.protoc.RequestProtoc.RequestContext.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.kincent.protoc.FeedbackRequest feedbackRequest = 2;
      public boolean hasFeedbackRequest() {
        return result.hasFeedbackRequest();
      }
      public com.kindroid.kincent.protoc.FeedbackProtoc.FeedbackRequest getFeedbackRequest() {
        return result.getFeedbackRequest();
      }
      public Builder setFeedbackRequest(com.kindroid.kincent.protoc.FeedbackProtoc.FeedbackRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFeedbackRequest = true;
        result.feedbackRequest_ = value;
        return this;
      }
      public Builder setFeedbackRequest(com.kindroid.kincent.protoc.FeedbackProtoc.FeedbackRequest.Builder builderForValue) {
        result.hasFeedbackRequest = true;
        result.feedbackRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeFeedbackRequest(com.kindroid.kincent.protoc.FeedbackProtoc.FeedbackRequest value) {
        if (result.hasFeedbackRequest() &&
            result.feedbackRequest_ != com.kindroid.kincent.protoc.FeedbackProtoc.FeedbackRequest.getDefaultInstance()) {
          result.feedbackRequest_ =
            com.kindroid.kincent.protoc.FeedbackProtoc.FeedbackRequest.newBuilder(result.feedbackRequest_).mergeFrom(value).buildPartial();
        } else {
          result.feedbackRequest_ = value;
        }
        result.hasFeedbackRequest = true;
        return this;
      }
      public Builder clearFeedbackRequest() {
        result.hasFeedbackRequest = false;
        result.feedbackRequest_ = com.kindroid.kincent.protoc.FeedbackProtoc.FeedbackRequest.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.kincent.protoc.Request)
    }
    
    static {
      defaultInstance = new Request(true);
      com.kindroid.kincent.protoc.RequestProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.kincent.protoc.Request)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_kincent_protoc_RequestContext_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_kincent_protoc_RequestContext_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_kincent_protoc_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_kincent_protoc_Request_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023RequestProtoc.proto\022\033com.kindroid.kinc" +
      "ent.protoc\032\024FeedbackProtoc.proto\"#\n\016Requ" +
      "estContext\022\021\n\tauthToken\030\001 \001(\t\"\216\001\n\007Reques" +
      "t\022<\n\007context\030\001 \001(\0132+.com.kindroid.kincen" +
      "t.protoc.RequestContext\022E\n\017feedbackReque" +
      "st\030\002 \001(\0132,.com.kindroid.kincent.protoc.F" +
      "eedbackRequestB\035\n\033com.kindroid.kincent.p" +
      "rotoc"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kindroid_kincent_protoc_RequestContext_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kindroid_kincent_protoc_RequestContext_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_kincent_protoc_RequestContext_descriptor,
              new java.lang.String[] { "AuthToken", },
              com.kindroid.kincent.protoc.RequestProtoc.RequestContext.class,
              com.kindroid.kincent.protoc.RequestProtoc.RequestContext.Builder.class);
          internal_static_com_kindroid_kincent_protoc_Request_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kindroid_kincent_protoc_Request_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_kincent_protoc_Request_descriptor,
              new java.lang.String[] { "Context", "FeedbackRequest", },
              com.kindroid.kincent.protoc.RequestProtoc.Request.class,
              com.kindroid.kincent.protoc.RequestProtoc.Request.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kindroid.kincent.protoc.FeedbackProtoc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
